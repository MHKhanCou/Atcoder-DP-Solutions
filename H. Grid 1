// In the name of Alah, the most merciful, the most gracious
#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pb push_back
#define vl vector<ll>
#define mh ios::sync_with_stdio(false); cin.tie(0);
#define nl '\n'

const ll N = 1e3 + 5;
const ll MOD = 1000000007;

string s[N];
int dp[N][N];

// Count number of ways to reach cell (x, y) from (0,0)
// using only down or right moves, avoiding '#' cells
ll func(ll x, ll y) {
    if (x < 0 || y < 0) return 0;
    if (x == 0 && y == 0) return 1;    // start cell
    if (s[x][y] == '#') return 0;      // blocked cell
    int &an = dp[x][y];
    if (~an) return an;
    ll ways = func(x - 1, y) + func(x, y - 1);
    ways %= MOD;
    return an = ways;
}

int main() {
    mh
    ll n, m;
    cin >> n >> m;
    for (int i = 0; i < n; i++) cin >> s[i];

    memset(dp, -1, sizeof(dp));

    cout << func(n - 1, m - 1) << nl;

    return 0;
}
