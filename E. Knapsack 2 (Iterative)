#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define vl vector<ll>
#define mh ios::sync_with_stdio(false); cin.tie(0);
#define nl '\n'

const int N = 5e5 + 5;

void solve() {
    ll n, kg;
    cin >> n >> kg;
    vl w(n + 1), v(n + 1);
    for (int i = 1; i <= n; i++) cin >> w[i] >> v[i];

    // dp[i][j] = minimum weight needed to achieve total value j using first i items
    vector<vl> dp(n + 1, vl(n * 1005, (ll)1e18));

    dp[0][0] = 0;  // 0 value with 0 items costs 0 weight
    int ans = 0;

    for (int i = 1; i <= n; i++) {
        dp[i][0] = 0; // 0 value achievable with zero weight
        for (int j = 1; j <= n * 1000; j++) {
            // Skip current item
            dp[i][j] = dp[i - 1][j];

            // Take current item if possible and update minimum weight
            if (j >= v[i])
                dp[i][j] = min(dp[i][j], dp[i - 1][j - v[i]] + w[i]);

            // Update answer if weight is within capacity
            if (dp[i][j] <= kg) ans = max(ans, j);
        }
    }
    cout << ans << nl;
}

int main() {
    mh;
    solve();
    return 0;
}
