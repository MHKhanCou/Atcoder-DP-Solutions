// In the name of Alah, the most merciful, the most gracious
#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define nl '\n'
#define mh ios::sync_with_stdio(false); cin.tie(0);

void solve() {
    ll n, taka;
    cin >> n >> taka;
    
    // Read weights and values of items (1-based indexing)
    vector<ll> w(n + 1), v(n + 1);
    for(int i = 1; i <= n; ++i)
        cin >> w[i] >> v[i];

    // dp[i][j] = max value using first i items with total weight j
    vector<vector<ll>> dp(n + 1, vector<ll>(taka + 1, 0));

    for(int i = 1; i <= n; ++i) {
        for(int j = 0; j <= taka; ++j) {
            // Exclude current item
            dp[i][j] = dp[i - 1][j];

            // Include current item if it fits
            if(j >= w[i])
                dp[i][j] = max(dp[i][j], dp[i - 1][j - w[i]] + v[i]);
        }
    }

    // Final answer: max value using all n items with total weight â‰¤ taka
    cout << dp[n][taka] << nl;
}

int main() {
    mh
    solve();
    return 0;
}
