// In the name of Alah, the most merciful, the most gracious
#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define mh ios::sync_with_stdio(false); cin.tie(0);
#define nl '\n'

const int N = 3005;

double dp[N][N], a[N];

int main()
{
    mh
    int n;
    cin >> n;
    for (int i = 1; i <= n; ++i) cin >> a[i];

    // Base case: after last coin, probability = 1 if heads > tails else 0
    for (int i = 0; i <= n; ++i) {
        dp[n + 1][i] = (i > n - i) ? 1.0 : 0.0;
    }

    // Bottom-up DP
    for (int pos = n; pos >= 1; --pos) {
        for (int head = 0; head <= n; head++) {
            dp[pos][head] = a[pos] * dp[pos + 1][head + 1]      // head
                         + (1 - a[pos]) * dp[pos + 1][head];     // tail
        }
    }

    cout << fixed << setprecision(10) << dp[1][0] << nl;

    return 0;
}
